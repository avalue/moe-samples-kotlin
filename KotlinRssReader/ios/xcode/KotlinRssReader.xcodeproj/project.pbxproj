// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		1B0478C88E16D64CB6B6D301 /* RSSCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 7F5DD4476F3640A397441A83 /* RSSCell.xib */; };
		39BF0CFE5E5367B3ACF70F3C /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 845D8DF04F3EBBCD2CDE355D /* LaunchScreen.xib */; };
		4ED761B6EBD7E44EB435382E /* moe-main-interfaces.m in Sources */ = {isa = PBXBuildFile; fileRef = A5ED5EA5E8DB9A012295B06B /* moe-main-interfaces.m */; };
		B290815E966D9771B6334CC0 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E643FAD70B46833648775403 /* main.cpp */; };
		F2A9F843A6A95DC403435A91 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = E643FAD70B46833648775403 /* main.cpp */; };
		F460F1794AD06221DD011D34 /* android_root in Resources */ = {isa = PBXBuildFile; fileRef = 4B31E9D4BC0758915B71A339 /* android_root */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		9311BC6E0E0377798522FDD4 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
		D88B25837DFB6B3182B43211 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		2D4E2B3EEE306CCF606E674C /* KotlinRssReader-Test.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "KotlinRssReader-Test.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		30C7980DED0E5A5879562FCF /* KotlinRssReader.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = KotlinRssReader.app; sourceTree = BUILT_PRODUCTS_DIR; };
		4B31E9D4BC0758915B71A339 /* android_root */ = {isa = PBXFileReference; lastKnownFileType = text; name = android_root; path = ../src/main/resources/android_root; sourceTree = SOURCE_ROOT; };
		7769AEB9E7D69C3C07D37EBF /* Info-Test.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Info-Test.plist"; path = "KotlinRssReader-Test/Info-Test.plist"; sourceTree = SOURCE_ROOT; };
		7F5DD4476F3640A397441A83 /* RSSCell.xib */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = RSSCell.xib; path = ../src/main/resources/RSSCell.xib; sourceTree = SOURCE_ROOT; };
		845D8DF04F3EBBCD2CDE355D /* LaunchScreen.xib */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = LaunchScreen.xib; path = ../src/main/resources/LaunchScreen.xib; sourceTree = SOURCE_ROOT; };
		A3CB6C6F6A1EC06CD0776E5B /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = KotlinRssReader/Info.plist; sourceTree = SOURCE_ROOT; };
		A5ED5EA5E8DB9A012295B06B /* moe-main-interfaces.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = "moe-main-interfaces.m"; path = "../build/moe/main/ui-headers/moe-main-interfaces.m"; sourceTree = "<group>"; };
		E643FAD70B46833648775403 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		01C1B64123E201AEAFA81DC0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		935738DD3C3C4124E2CD49B7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		12F49B96A4A7D5A408F76E9A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			path = Frameworks;
			sourceTree = "<group>";
		};
		69667B5CD686DA8D402B9356 /* KotlinRssReader-Test */ = {
			isa = PBXGroup;
			children = (
				926AEAAC20B594364001A4AE /* Supporting Files */,
			);
			path = "KotlinRssReader-Test";
			sourceTree = "<group>";
		};
		7E971FA9941177FE7B62DF05 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				E643FAD70B46833648775403 /* main.cpp */,
				A3CB6C6F6A1EC06CD0776E5B /* Info.plist */,
				845D8DF04F3EBBCD2CDE355D /* LaunchScreen.xib */,
				7F5DD4476F3640A397441A83 /* RSSCell.xib */,
				4B31E9D4BC0758915B71A339 /* android_root */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		926AEAAC20B594364001A4AE /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				7769AEB9E7D69C3C07D37EBF /* Info-Test.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		9C5E08534AE51F8B0AADBC48 /* Multi-OS Engine */ = {
			isa = PBXGroup;
			children = (
				A5ED5EA5E8DB9A012295B06B /* moe-main-interfaces.m */,
			);
			name = "Multi-OS Engine";
			sourceTree = "<group>";
		};
		CB60C569520EC6060C3497D9 /* Products */ = {
			isa = PBXGroup;
			children = (
				30C7980DED0E5A5879562FCF /* KotlinRssReader.app */,
				2D4E2B3EEE306CCF606E674C /* KotlinRssReader-Test.app */,
			);
			path = Products;
			sourceTree = "<group>";
		};
		CFBE80AD5C87CF4A4EA601DD /* KotlinRssReader */ = {
			isa = PBXGroup;
			children = (
				7E971FA9941177FE7B62DF05 /* Supporting Files */,
			);
			path = KotlinRssReader;
			sourceTree = "<group>";
		};
		E07FC060744962C5F078FE96 = {
			isa = PBXGroup;
			children = (
				CFBE80AD5C87CF4A4EA601DD /* KotlinRssReader */,
				69667B5CD686DA8D402B9356 /* KotlinRssReader-Test */,
				12F49B96A4A7D5A408F76E9A /* Frameworks */,
				CB60C569520EC6060C3497D9 /* Products */,
				9C5E08534AE51F8B0AADBC48 /* Multi-OS Engine */,
			);
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		3E63CCFD7FA9E3E0E5152240 /* KotlinRssReader-Test */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 845A55C3FC22AB559D0870C0 /* Build configuration list for PBXNativeTarget "KotlinRssReader-Test" */;
			buildPhases = (
				750507B92B619CB09D840D0C /* Compile Sources (MOE) */,
				935738DD3C3C4124E2CD49B7 /* Frameworks */,
				5D64501252450B214ADF9154 /* Resources */,
				F36B8612B055BE8B5B17B81F /* Sources */,
				D88B25837DFB6B3182B43211 /* Embed Frameworks */,
			);
			buildRules = (
			);
			name = "KotlinRssReader-Test";
			productName = "KotlinRssReader-Test";
			productReference = 2D4E2B3EEE306CCF606E674C /* KotlinRssReader-Test.app */;
			productType = "com.apple.product-type.application";
		};
		996C8B25382D33654E1D2B91 /* KotlinRssReader */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DD32D380FB5EB4E0AF444BA7 /* Build configuration list for PBXNativeTarget "KotlinRssReader" */;
			buildPhases = (
				166C6901DA07E0901653D77D /* Compile Sources (MOE) */,
				01C1B64123E201AEAFA81DC0 /* Frameworks */,
				2E18F7944AFE0B3F0B0E230F /* Resources */,
				8ADB3DCBC5205AB5BC754B49 /* Sources */,
				9311BC6E0E0377798522FDD4 /* Embed Frameworks */,
			);
			buildRules = (
			);
			name = KotlinRssReader;
			productName = KotlinRssReader;
			productReference = 30C7980DED0E5A5879562FCF /* KotlinRssReader.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		CEDA3754B135E5A322849A1C /* Project object */ = {
			isa = PBXProject;
			attributes = {
				ORGANIZATIONNAME = "My Company";
			};
			buildConfigurationList = CBDC7BA40324C3536D028A2E /* Build configuration list for PBXProject "KotlinRssReader" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E07FC060744962C5F078FE96;
			productRefGroup = CB60C569520EC6060C3497D9 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				996C8B25382D33654E1D2B91 /* KotlinRssReader */,
				3E63CCFD7FA9E3E0E5152240 /* KotlinRssReader-Test */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		2E18F7944AFE0B3F0B0E230F /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39BF0CFE5E5367B3ACF70F3C /* LaunchScreen.xib in Resources */,
				1B0478C88E16D64CB6B6D301 /* RSSCell.xib in Resources */,
				F460F1794AD06221DD011D34 /* android_root in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5D64501252450B214ADF9154 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		166C6901DA07E0901653D77D /* Compile Sources (MOE) */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Compile Sources (MOE)";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "set -e\n\nexport MOE_BUILD_SOURCE_SET=\"main\"\n\n# Check project directory\nif [ ! -d \"$MOE_PROJECT_DIR\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_DIR' doesn't point to a directory!\"; exit 1;\nfi\ncd \"$MOE_PROJECT_DIR\"\n\n# Export JAVA_HOME\nexport JAVA_HOME=$(/usr/libexec/java_home -v 1.8)\n\n# Utility function for finding the Gradle implementation\nfunction findGradle {\n    CD=\"$PWD\"\n    while [ \"$CD\" != \"\" ]; do\n        echo \"Looking for gradlew in $CD\"\n        if [ -x \"$CD/gradlew\" ]; then\n            GRADLE_EXEC=$CD/gradlew\n            return 0\n        fi\n        CD=\"${CD%/*}\"\n    done\n\n    echo \"Checking with 'which'\"\n    GRADLE_EXEC=$(which 'gradle')\n\n    if [ \"$GRADLE_EXEC\" = \"\" ]; then\n        echo \"Failed to locate 'gradle' executable!\"\n        exit 1\n    fi\n}\n\n# Build project with Gradle\nif [ -z \"$MOE_GRADLE_EXTERNAL_BUILD\" ]; then\n    findGradle\n    \"$GRADLE_EXEC\" --no-daemon moeXcodeInternal -s\nfi\n\n# Check output directory\nif [ ! -d \"${MOE_PROJECT_BUILD_DIR}\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_BUILD_DIR' doesn't point to a directory!\"; exit 1;\nfi\n\n# Copy some resources\nmkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/preregister.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/classlist.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nfi\n\n# Copy jars\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/application.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/classes.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_DEX_PATH}/moe-core-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-core-dex.jar\"\ncp \"${MOE_DEX_PATH}/moe-ios-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-ios-dex.jar\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_DEX_PATH}/moe-ios-junit-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-ios-junit-dex.jar\"\nfi\n\n# Copy android CA certificates on demand\nif [ \"${MOE_COPY_ANDROID_CACERTS}\" == \"YES\" ]; then\n    rm -rf \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    mkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    unzip \"${MOE_SDK_PATH}/sdk/moe-core-certificates.zip\" -d \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\nfi\n\n# Copy and sign MOE framework\nrsync -av --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \\\n    \"${MOE_FRAMEWORK_PATH}/MOE.framework\" \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/\"\nif [ -n \"${EXPANDED_CODE_SIGN_IDENTITY}\" -a \"${CODE_SIGNING_REQUIRED}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    /usr/bin/codesign --force --sign $EXPANDED_CODE_SIGN_IDENTITY $OTHER_CODE_SIGN_FLAGS \\\n        --preserve-metadata=identifier,entitlements \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework\"\nfi\n";
		};
		750507B92B619CB09D840D0C /* Compile Sources (MOE) */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Compile Sources (MOE)";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "set -e\n\nexport MOE_BUILD_SOURCE_SET=\"test\"\n\n# Check project directory\nif [ ! -d \"$MOE_PROJECT_DIR\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_DIR' doesn't point to a directory!\"; exit 1;\nfi\ncd \"$MOE_PROJECT_DIR\"\n\n# Export JAVA_HOME\nexport JAVA_HOME=$(/usr/libexec/java_home -v 1.8)\n\n# Utility function for finding the Gradle implementation\nfunction findGradle {\n    CD=\"$PWD\"\n    while [ \"$CD\" != \"\" ]; do\n        echo \"Looking for gradlew in $CD\"\n        if [ -x \"$CD/gradlew\" ]; then\n            GRADLE_EXEC=$CD/gradlew\n            return 0\n        fi\n        CD=\"${CD%/*}\"\n    done\n\n    echo \"Checking with 'which'\"\n    GRADLE_EXEC=$(which 'gradle')\n\n    if [ \"$GRADLE_EXEC\" = \"\" ]; then\n        echo \"Failed to locate 'gradle' executable!\"\n        exit 1\n    fi\n}\n\n# Build project with Gradle\nif [ -z \"$MOE_GRADLE_EXTERNAL_BUILD\" ]; then\n    findGradle\n    \"$GRADLE_EXEC\" --no-daemon moeXcodeInternal -s\nfi\n\n# Check output directory\nif [ ! -d \"${MOE_PROJECT_BUILD_DIR}\" ]; then\n    echo \"$0:$LINENO:1: error: 'MOE_PROJECT_BUILD_DIR' doesn't point to a directory!\"; exit 1;\nfi\n\n# Copy some resources\nmkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/preregister.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/classlist.txt\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\nfi\n\n# Copy jars\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/application.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_PROJECT_BUILD_DIR}/moe/${MOE_BUILD_SOURCE_SET}/dex/$(echo ${CONFIGURATION} | awk '{print tolower($0)}')/classes.jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\"\ncp \"${MOE_DEX_PATH}/moe-core-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-core-dex.jar\"\ncp \"${MOE_DEX_PATH}/moe-ios-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-ios-dex.jar\"\nif [ \"${MOE_BUILD_SOURCE_SET}\" == \"test\" ]; then\n    cp \"${MOE_DEX_PATH}/moe-ios-junit-dex-$(echo ${CONFIGURATION} | awk '{print tolower($0)}').jar\" \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/moe-ios-junit-dex.jar\"\nfi\n\n# Copy android CA certificates on demand\nif [ \"${MOE_COPY_ANDROID_CACERTS}\" == \"YES\" ]; then\n    rm -rf \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    mkdir -p \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\n    unzip \"${MOE_SDK_PATH}/sdk/moe-core-certificates.zip\" -d \"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/android_root/etc/security/cacerts\"\nfi\n\n# Copy and sign MOE framework\nrsync -av --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \\\n    \"${MOE_FRAMEWORK_PATH}/MOE.framework\" \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/\"\nif [ -n \"${EXPANDED_CODE_SIGN_IDENTITY}\" -a \"${CODE_SIGNING_REQUIRED}\" != \"NO\" -a \"${CODE_SIGNING_ALLOWED}\" != \"NO\" ]; then\n    /usr/bin/codesign --force --sign $EXPANDED_CODE_SIGN_IDENTITY $OTHER_CODE_SIGN_FLAGS \\\n        --preserve-metadata=identifier,entitlements \"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/MOE.framework\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		8ADB3DCBC5205AB5BC754B49 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B290815E966D9771B6334CC0 /* main.cpp in Sources */,
				4ED761B6EBD7E44EB435382E /* moe-main-interfaces.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F36B8612B055BE8B5B17B81F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F2A9F843A6A95DC403435A91 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		201CB39F8BA3D1D724D544E7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEAD_CODE_STRIPPING = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = NO;
				ENABLE_BITCODE = NO;
				EXPORTED_SYMBOLS_FILE = "${MOE_SYMBOLS_FILE}";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = "KotlinRssReader-Test/Info-Test.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_DEX_PATH = "${MOE_SDK_PATH}/sdk";
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_NATIVES = "-force_load ${MOE_SDK_PATH}/sdk/moe-core-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-natives-${CONFIGURATION:lower}/${arch}.a  -force_load ${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-junit-natives-${CONFIGURATION:lower}/${arch}.a ";
				MOE_OTHER_LDFLAGS = "${MOE_CUSTOM_OTHER_LDFLAGS} ${MOE_NATIVES} -lstdc++ -framework MOE -undefined dynamic_lookup";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SYMBOLS_FILE = "${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.exp";
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = "${MOE_OTHER_LDFLAGS}";
				PRODUCT_NAME = "KotlinRssReader-Test";
				STRIP_STYLE = "non-global";
			};
			name = Debug;
		};
		71C2D65D9CCB7CE92C9365DC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_VERSION = 2.0.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SYMROOT = "$(SRCROOT)/../build/moe/xcodebuild/sym";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		8352490CC971573573B67D0B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEAD_CODE_STRIPPING = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = NO;
				ENABLE_BITCODE = NO;
				EXPORTED_SYMBOLS_FILE = "${MOE_SYMBOLS_FILE}";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = "KotlinRssReader-Test/Info-Test.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_DEX_PATH = "${MOE_SDK_PATH}/sdk";
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_NATIVES = "-force_load ${MOE_SDK_PATH}/sdk/moe-core-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-natives-${CONFIGURATION:lower}/${arch}.a  -force_load ${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-junit-natives-${CONFIGURATION:lower}/${arch}.a ";
				MOE_OTHER_LDFLAGS = "${MOE_CUSTOM_OTHER_LDFLAGS} ${MOE_NATIVES} -lstdc++ -framework MOE -undefined dynamic_lookup";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/../";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SYMBOLS_FILE = "${MOE_PROJECT_BUILD_DIR}/moe/test/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.exp";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = "${MOE_OTHER_LDFLAGS}";
				PRODUCT_NAME = "KotlinRssReader-Test";
				STRIP_STYLE = "non-global";
			};
			name = Release;
		};
		A6AD9F3929AE2934272C9385 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_VERSION = 2.0.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				SDKROOT = iphoneos;
				SYMROOT = "$(SRCROOT)/../build/moe/xcodebuild/sym";
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		F38F46AD6E48EF64724152D3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEAD_CODE_STRIPPING = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = NO;
				ENABLE_BITCODE = NO;
				EXPORTED_SYMBOLS_FILE = "${MOE_SYMBOLS_FILE}";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = KotlinRssReader/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_DEX_PATH = "${MOE_SDK_PATH}/sdk";
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_NATIVES = "-force_load ${MOE_SDK_PATH}/sdk/moe-core-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.a";
				MOE_OTHER_LDFLAGS = "${MOE_CUSTOM_OTHER_LDFLAGS} ${MOE_NATIVES} -lstdc++ -framework MOE -undefined dynamic_lookup";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/..";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SYMBOLS_FILE = "${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.exp";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = "${MOE_OTHER_LDFLAGS}";
				PRODUCT_NAME = KotlinRssReader;
				STRIP_STYLE = "non-global";
			};
			name = Release;
		};
		FF04B86BE5D3DE4234FF2742 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEAD_CODE_STRIPPING = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = NO;
				ENABLE_BITCODE = NO;
				EXPORTED_SYMBOLS_FILE = "${MOE_SYMBOLS_FILE}";
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"${MOE_FRAMEWORK_PATH}",
				);
				INFOPLIST_FILE = KotlinRssReader/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MOE_COPY_ANDROID_CACERTS = NO;
				MOE_DEX_PATH = "${MOE_SDK_PATH}/sdk";
				MOE_FRAMEWORK_PATH = "${MOE_SDK_PATH}/sdk/${PLATFORM_NAME}";
				MOE_NATIVES = "-force_load ${MOE_SDK_PATH}/sdk/moe-core-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_SDK_PATH}/sdk/moe-ios-natives-${CONFIGURATION:lower}/${arch}.a -force_load ${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.a";
				MOE_OTHER_LDFLAGS = "${MOE_CUSTOM_OTHER_LDFLAGS} ${MOE_NATIVES} -lstdc++ -framework MOE -undefined dynamic_lookup";
				MOE_PROJECT_BUILD_DIR = "${MOE_PROJECT_DIR}/build";
				MOE_PROJECT_DIR = "${SRCROOT}/..";
				MOE_SDK_PATH = "${MOE_PROJECT_BUILD_DIR}/moe/sdk";
				MOE_SYMBOLS_FILE = "${MOE_PROJECT_BUILD_DIR}/moe/main/xcode/${CONFIGURATION}${EFFECTIVE_PLATFORM_NAME}/${arch}.exp";
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = "${MOE_OTHER_LDFLAGS}";
				PRODUCT_NAME = KotlinRssReader;
				STRIP_STYLE = "non-global";
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		845A55C3FC22AB559D0870C0 /* Build configuration list for PBXNativeTarget "KotlinRssReader-Test" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				201CB39F8BA3D1D724D544E7 /* Debug */,
				8352490CC971573573B67D0B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		CBDC7BA40324C3536D028A2E /* Build configuration list for PBXProject "KotlinRssReader" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A6AD9F3929AE2934272C9385 /* Debug */,
				71C2D65D9CCB7CE92C9365DC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DD32D380FB5EB4E0AF444BA7 /* Build configuration list for PBXNativeTarget "KotlinRssReader" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FF04B86BE5D3DE4234FF2742 /* Debug */,
				F38F46AD6E48EF64724152D3 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = CEDA3754B135E5A322849A1C /* Project object */;
}
